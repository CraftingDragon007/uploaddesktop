name: Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  createRelease:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - uses: actions/checkout@v2
      
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3 
        with:
          token: ${{secrets.github_token}}

      - name: create release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  "build_${{ steps.buildnumber.outputs.build_number }}"
          release_name: "build:${{ steps.vars.outputs.sha_short }}"
          body: "See the assets to download this version and install."
          draft: true
          prerelease: true
          
  buildMatrix:
    strategy:
        fail-fast: false
        matrix:
          platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    needs: createRelease

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.5.1
      with:
        node-version: 16
        
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install tauri-cli
      uses: baptiste0928/cargo-install@v1
      with:
        crate: tauri-cli
        version: "^1.0.0-rc"
        
    - name: install webkit2gtk (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0
        
    - name: install app dependencies and build it
      run: cd frontend; yarn && yarn build
      
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}
        npmScript: frontend/package.json
        distPath: frontend
        projectPath: .
