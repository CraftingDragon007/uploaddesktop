name: Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      BUILD_ID: ${{ steps.buildnumber.outputs.build_number }}
      COMMIT: ${{ steps.vars.outputs.sha_short }}

    steps:
      - uses: actions/checkout@v2
      
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3 
        with:
          token: ${{ secrets.github_token }}
          
  buildMatrix:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
  
    strategy:
        fail-fast: false
        matrix:
          include:
          - os: ubuntu-latest
            artifact_name: "target/release/bundle/appimage/uploaddesktop_0.1.0_amd64.AppImage;target/release/deb/uploaddesktop_0.1.0_amd64.deb)"
                         
          - os: windows-latest
            artifact_name: "target/release/bundle/msi/uploaddesktop_0.1.0_x64_en-US.msi"
            
          - os: macos-latest
            artifact_name: "target/release/bundle/macos/uploaddesktop.app;target/release/dmg/uploaddesktop_0.1.0_x64.dmg"

    needs: prepare

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.5.1
      with:
        node-version: 16
        
    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Install rust cache
      uses: Swatinem/rust-cache@v1

    - name: Install tauri-cli
      uses: baptiste0928/cargo-install@v1
      with:
        crate: tauri-cli
        version: "^1.0.0-rc"
        
    - name: install webkit2gtk (ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0
        
    - name: install app dependencies
      run: cd frontend; yarn
      
    - name: Build
      run: cargo tauri build
    
    - name: Upload binaries to release
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: ${{ matrix.artifact_name }}

        draft: true
        prerelease: true
        release_name: "build:${{ needs.prepare.outputs.COMMIT }}"
        tag_name: "build_${{ needs.prepare.outputs.BUILD_ID }}"
        
        overwrite: true
